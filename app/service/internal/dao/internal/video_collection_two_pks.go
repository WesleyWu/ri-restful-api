// Code generated by gf-codegen. DO NOT EDIT.
// 数据操作 dao internal
// 生成日期：2022-12-23 18:36:40
// 生成人：Wumengye
package internal

import (
    "context"
    _ "github.com/gogf/gf/contrib/drivers/mysql/v2"
    "github.com/gogf/gf/v2/database/gdb"
    "github.com/gogf/gf/v2/frame/g"
)

// VideoCollectionTwoPksDao is the manager for logic model data accessing and custom defined data operations functions management.
type VideoCollectionTwoPksDao struct {
    Table   string         // Table is the underlying table name of the DAO.
    Group   string         // Group is the database configuration group name of current DAO.
    Columns VideoCollectionTwoPksColumns // Columns is the short type for Columns, which contains all the column names of Table for convenient usage.
    ColumnMap map[string]string
}

// VideoCollectionTwoPksColumns defines and stores column names for table demo_video_collection_two_pks.
type VideoCollectionTwoPksColumns struct {
    Id1  string  // 视频集ID1
    Id2  string  // 视频集ID2
    ContentType  string  // 内容类型
    FilterType  string  // 筛选类型
    Count  string  // 集合内视频数量
    IsOnline  string  // 是否上线：0 未上线|1 已上线
    CreatedAt  string  // 创建时间
    UpdatedAt  string  // 更新时间
}

var (
    videoCollectionTwoPksColumns = VideoCollectionTwoPksColumns{
        Id1:          "id1",
        Id2:        "id2",
        ContentType: "content_type",
        FilterType:  "filter_type",
        Count:       "count",
        IsOnline:    "is_online",
        CreatedAt:   "created_at",
        UpdatedAt:   "updated_at",
    }
    videoCollectionTwoPksColumnMap = g.MapStrStr{
        "Id1":          "id1",
        "Id2":        "id2",
        "ContentType": "content_type",
        "FilterType":  "filter_type",
        "Count":       "count",
        "IsOnline":    "is_online",
        "CreatedAt":   "created_at",
        "UpdatedAt":   "updated_at",
    }
    videoCollectionTwoPksDao = &VideoCollectionTwoPksDao{
        Group:     "default",
        Table:     "demo_video_collection_two_pks",
        Columns:   videoCollectionTwoPksColumns,
        ColumnMap: videoCollectionTwoPksColumnMap,
    }
)


// NewVideoCollectionTwoPksDao creates and returns a new DAO object for table data access.
func NewVideoCollectionTwoPksDao() *VideoCollectionTwoPksDao {
	return videoCollectionTwoPksDao
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *VideoCollectionTwoPksDao) DB() gdb.DB {
	return g.DB(dao.Group)
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *VideoCollectionTwoPksDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(videoCollectionTwoPksDao.Table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *VideoCollectionTwoPksDao) Transaction(ctx context.Context, f func(ctx context.Context, tx gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}